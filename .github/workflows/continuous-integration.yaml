on: [push, pull_request]

name: Continuous Integration

jobs:
    test:
        name: Tests (Symfony ${{ matrix.symfony-version }} & PHP ${{ matrix.php-version }})
        runs-on: ubuntu-latest

        strategy:
            matrix:
                php-version: ['7.4', '8.0', '8.1']
                symfony-version: ['4.4', '5.0', '5.1', '5.2', '5.3', '5.4', '6.0', '6.1']
                test-options: ['']
                coverage: [false]
                include:
                    - php-version: '8.1'
                      symfony-version: '5.4'
                      coverage: true
                      test-options: '-with-coverage'
                    - php-version: '8.1'
                      symfony-version: '5.4'
                exclude:
                    - php-version: '7.4'
                      symfony-version: '6.0'
                    - php-version: '7.4'
                      symfony-version: '6.1'
                    - php-version: '8.0'
                      symfony-version: '5.0'
                    - php-version: '8.0'
                      symfony-version: '6.1'
                    - php-version: '8.1'
                      symfony-version: '5.0'
                    - php-version: '8.1'
                      symfony-version: '5.1'
                    - php-version: '8.1'
                      symfony-version: '5.2'

        steps:
            - uses: actions/checkout@v2

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                 php-version: ${{ matrix.php-version }}
                 extensions: mbstring, json, xml
                 coverage: pcov

            - name: Detect dependency cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache dependencies
              uses: actions/cache@v2
              with:
                 path: ${{ steps.composer-cache.outputs.dir }}
                 key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                 restore-keys: ${{ runner.os }}-composer-

            - name: Install dependencies and switch Symfony components to version ${{ matrix.symfony-version }}
              run: make switch-symfony version=${{ matrix.symfony-version }}

            - name: Run PHPUnit
              run: make test${{ matrix.test-options }}

            - name: Code Coverage Summary
              uses: irongut/CodeCoverageSummary@v1.2.0
              if: ${{ matrix.coverage == true }}
              with:
                  filename: coverage.cobertura.xml
                  format: markdown
                  badge: true
                  fail_below_min: true
                  hide_branch_rate: true
                  output: both
                  thresholds: '50 95'

            - uses: actions/upload-artifact@v2
              with:
                name: coverage
                path: |
                  coverage.txt
                  code-coverage-results.md

    lockfile-integrity:
        name: Composer lockfile integrity
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.1'
                  coverage: none

            - name: Validate composer.json and composer.lock
              run: make validate-dependencies

    code-style:
        name: Code standards
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.1'
                  coverage: none

            - name: Detect dependency cache directory
              id: composer-cache
              run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            - name: Cache dependencies
              uses: actions/cache@v2
              with:
                 path: ${{ steps.composer-cache.outputs.dir }}
                 key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                 restore-keys: ${{ runner.os }}-composer-

            - name: Install dependencies
              run: make install

            - name: Check code standards
              run: make code-style-check
